반응형 웹페이지 만들기
px -> vw,vh

미디어쿼리
@media(조건){ 
    스타일
}

자바스크립트
웹을 좀 더 동적을 보여주기 위한 도구
자료형
Number ->정수,실수
String -> 문자는 모두
Boolean -> true, false
undefined -> 변수가 선언됐지만 초기화되지 않은 상태

변수
var -> 재선언해도 오류 안남
let -> 대입은 계속할 수 있으나, 재선언시 오류
const -> 초기화만 가능, 재선언 불가

let 변수명; -> 선언
변수명 = 데이터; -> 대입

const 변수명 = 데이터; -> 초기화를 무조건 해야함

String() -> 인자로 들어온 값을 문자열로 변경
Number() -> 인자로 들어온 값을 숫자로 변경
ㄴNaN(Not a Number : 들어온 값이 숫자 형태가 아니다.)
Boolean() -> 인자로 들어온 값을 논리형으로 변경

변수의 유효범위

var -> 함수 안에서는 지역변수, 나머지 코드블럭에서는 지역변수X
let, const -> 함수나 다른 코드블럭에서 모두 지역변수가 됨

let 변수명 -> 어떠한 타입도 다 저장할 수 있다.

문자열
숫자
논리형 -> true,false(0,null,'',undefined),true(그 이외의 것들)
null, undefined
객체(Object) 

연산자
나누기 / -> 소수점까지 나눗셈을 한다.
문자열뒤에 더하기는 연결로 취급

A == B A와 B의 데이터 값만 비교를 한다.
A === B 데이터와 타입까지 같이 비교
A != B 
A !== B

조건문
if(조건식){
   조건식이 참일 때 실행할 문장
}

switch(조건값){
     case 비교값:
	조건값과 비교값이 일치할 때 실행할 명령;
	break;
     case 비교값:
	조건값과 비교값이 일치할 때 실행할 명령;
	break;
     case 비교값:
	조건값과 비교값이 일치할 때 실행할 명령;
	break;
}

for(초기식;조건식;증감식){
	조건식이 참일 때 반복할 명령;
}

-> html에 반복적인 태그를 만들어줘야 할 때

자바스크립트 객체
document 웹문서 그자체

document.write()
인자로 문자열 형태의 html태그를 적어주면
body에 실제로 반영이 된다.

자바에서 함수를 만들어서 사용하는 법

클래스에 구성요소
필드
함수
생성자

자바스크립트에서의 함수
- 일련의 처리를 하나로 모아 언제든 호출할 수 있도록 만들어 놓은 것
-수학의 함수와 비슷
-함수의 입력값을 인수, 함수의 출력값을 반환값

function 함수명(매개변수){
	처리 로직
	return 반환값
}

함수는 독립적으로 호출이 가능하다.
매개변수를 여러개 정의할 수도 있다.

function method(a,b){
	let c = a+b;
	return c;
}

1. 매개변수가 있고 반환값이 있는 함수
2. 매개변수가 있고 반환값이 없는 함수
3. 매개변수가 없고 반환값이 있는 함수
4. 매개변수가 없고 반환값이 없는 함수

함수의 흐름
- 호출된 코드에 있는 인자가 함수의 매개변수에 대입된다.
- 함수의 코드블럭 안에 있는 코드들이 순차적으로 실행된다.
- return문이 실행되면 반환값을 가지고 함수를 호출한 곳으로 돌아간다.

함수의 호이스팅
- 자바스크립트 엔진은 변수 선언문과 마찬가지로 함수 선언문을 프로그램의 첫 머리로 끌어올린다.
- 따라서 함수 선언문은 어떤 프로그램 위치에서도 작성할 수 있다


JS를 HTML과 어떻게 사용할 것인가?
HTML파일 안에 <script> ~ </script>

이벤트 핸들러 맛보기
정적인 마크업 언어에서 동적인 일이 일어나는 것은 하나의 사건이라고 할 수 있다.
버튼을 클릭하는 것도 사건
빈칸에 글자를 타이핑하는 것도 사건
이러한 사건을 JS에서는 이벤트라고 부른다.

onclick -> 클릭했을 때를 의미하는 속성
이때 수행되는 작업을 이벤트핸들러하고 한다.

이벤트처리를 위한 함수 표현
태그에 onclick속성을 부여하여 이벤트를 처리하는 방법을 
인라인 이벤트 모델이라고 부른다.

표준 이벤트 모델
인라인 이벤트 모델은 HTML에 기능적인 측면이 추가됨에 따라 '정보의 뼈대'만 제공한다는 
HTML의 철학이 무너진다.
따라서 협업을 하는 다른 개발자가 기능의 수정을 위해 굳이 정보위주의 문서인 
HTML파일을 열어봐야 한다는 문제가 있다.

자바스크립트 활용시 주의사항
자바스크립트 코드를 별도의 파일로 분리하기
html도 위에서 아래로 실행이 되기 때문에 아직 만들어지지 않은 html요소에 대해서 
읽어올 수 없다.

JS에게 HTML코드가 모두 실행되면 그 때 너의 코드를 실행해줘
이와 같은 방식을 비동기처리라고 부른다.

동기처리는 하나의 작업이 끝나는 즉시 다음 명령을 처리한다.
덕분에 아직 HTML요소가 만들어지지 않은 상태에서 요소의 기능을 추가하라는 상황이 벌어진다.

반면 비동기처리는 지금 당장 처리해야 할 명령과 나중에 처리할 명령을 구분한다.

태그를 못찾는 경우
1. <script>를 태그 아래로 내린다.
2. 인라인 이벤트 모델만 사용한다.
3. DOMContentLoaded 이벤트를 활용한다.
 