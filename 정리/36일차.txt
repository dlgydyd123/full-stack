가상DOM이 어떻게 작동을 하는가
1.상태변경(State change)
컴포넌트의 상태가 변경되면 리액트는 새로운 가상DOM트리를 생성한다.
이때 새로운 가상 DOM트리는 변경을 반영한 최신 UI구조를 가지고 있다.

2.가상 DOM비교(Diffing)
새로운 가상 DOM트리와 기존 가상 DOM트리를 비교해, 리액트는 두 트리 사이의 차이점을 찾아낸다.

3. 변경사항 계산
차이점을 계산한 후, 리액트는 그 변경 사항만을 실제 DOM에 적용
변경된 부분에 대해서만 DOM을 조작하게 되므로 성능이 크게 향상

4.실제 DOM업데이트
리액트는 가상 DOM과의 비교를 통해 필요한 부분만 실제 DOM에 반영된다.

map()
배열의 각 요소를 변환하여 새로운 배열을 반환하는 메서드
원래 배열의 크기는 변하지 않고, 반환된 배열은 변환된 값을 포함한다.

filter()
배열의 각 요소를 검사해서 조건을 만족하는 요소만 모아 새로운 배열의 반환조건을 
만족하지 않는 요소는 제외

find()
배열의 요소 중에서 조건을 만족하는 첫 번째 요소를 반환
조건을 만족하는 요소가 없으면 undefined를 반환


state속성의 장점
1.URL에 노출되지 않는다.
2.임시 데이터 전송에 유용
로그인,페이지 간 임시 데이터 전달 등과 같이 굳이 URL에 표시할 필요가 없는 데이터를 전달할 때 유용하다.
3.보안성에 좋다.
쿼리 문자열이나 URL파라미터와 달리,state는 클라이언트 측에서 직접 확인하기 어려워 보안적으로 이점이 있다.

주의해야 할 점 
페이지를 새로고침하거나 브라우저에서 직접 URL을 입력하여 접근하는 경우 state 정보는 사라진다.
너무 많은 데이터를 state로 넘기는 것은 피하고 중요한 데이터는 redux,Context API를 통해 관리하자

