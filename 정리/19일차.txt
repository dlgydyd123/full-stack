데이터베이스 모델링
테이블을 생성하기 전에 어떻게 만들것인가에 대한 약속하는 것
고객쪽에서 요구한 사항에 대해 분석하고 설계하는 것

1.요구사항 분석
내가 하려는 프로젝트의 기능, 고객의 요청사항을 잘 분석해서
몇개의 테이블이 나올지, 테이블마다 어떤 속성이 들어가게 될지 생각해야함

2.개념적 모델링
각 테이블 마다 어떻게 관계를 맺는지 설정
ERD를 그린다.
피터첸 표기법
엔티티 표기법

3.논리적 모델링
- 제약조건, 속성별 타입과 크기 설정
- 정규화

4.물리적 모델링
테이블을 어느 데이터베이스저장공간에 저장할 건지 정한는 단계
SQL로 구현하는 단계

5.구현



DDL
- CREATE
- DROP
- ALTER
- TRUNCATE

DML(DataManipulationLanguage) : 데이터 제어어
SELECT
원하는 데이터를 조회하기위한 키워드

SELECT * FROM 테이블; -> 테이블에서 전체 컬럼에 대한 데이터 조회

SELECT 컴럼명1,컬럼명2,... FROM 테이블; -> 테이블에서 컬럼1,컬럼2에 대한 전체 데이터 조회

WHERE 조건식;
- 원하는 자료를 검색하기 위한 조건절

컬럼명 비교연산자 값(문자,숫자,표현식)

조건식 
컬럼명 IS NULL -> 해당 컬럼에 NULL값이 들어가 있는 행을 조회
컬럼명 IS NOT NULL -> 해당 컬럼에 NULL값이 안들어가 있는 행을 조회

AND -> 조건 AND 조건
앞 뒤의 조건을 모두 만족하는 데이터를 조회

OR -> 조건 OR 조건
앞 또는 뒤 조건 중 하나라도 만족하는 데이터를 조회

SQL연산자
BETWEEN -> 어떤 범위에 대해서 조회 WHERE 컬럼명 BETWEEN A AND B;
IN -> 특정 값에 대해 조회 WHERE 컬럼명 IN(값,값,값);
LIKE -> 특정 문자열을 포함하고 있는 데이터 조회
WHERE 커럼명 LIKE '형식';
WHERE 커럼명 NOT LIKE '형식';

---------------------------------------------------------------------------------------------------------
테이블에 데이터 추가하기 
INSERT

INSERT INTO 테이블명(컬럼명1, 컬럼명2...) VALUES(값1,값2...);
DEFAULT값을 넣고싶을 때 

INSERT INTO 테이블명 VALUES(값1,값2...);
무조건 컬럼의 개수만큼 값을 대입해야한다.

다른 테이블의 데이터를 조회해서 추가하기
INSERT INTO 테이블명(컬럼명1, 컬럼명2...)
SELECT 컬럼1,컬럼2...
FROM 테이블
WHERE 조건;

각각의 테이블에 데이터를 추가하기
INSERT ALL
   INTO 테이블A(컬럼1,컬럼2) VALUES (값1, 값2)
   INTO 테이블B(컬럼3,컬럼4) VALUES (값3, 값4) 
SELECT * FROM DUAL; 오라클에서 제공하는 가상의 테이블 DUAL

조회 -> 테이블에 영향이 없음
추가, 삭제, 수정 -> 테이블에 영향을 준다.

삭제
DELETE
조건에 맞는 데이터를 테이블에서 삭제
- 행 단위로 지움

DELETE FROM 테이블명 
WHERE 조건식;

※TRUNCATE
테이블 안에 있는 데이터를 싹 날린다.

수정하기
UPDATE
-테이블의 데이터를 수정할 때 사용하는 키워드
UPDATE 테이블명 
SET 컬럼명 = 새로운 값 , 
      컬럼명 = 새로운 값 , 
      컬럼명 = 새로운 값 
WHERE 조건식;

※조건식을 달지 않으면 테이블 전체에서 데이터가 수정된다.

ORDER BY(정렬)
- 질의결과에 반환되는 행들을 특정기준으로 정렬하고자 할 때 사용
- ORDER BY절은 SELECT절의 가장 마지막에 기술
- ASC : 오름차순(DEFAULT이기 때문에 생략 가능)
- DESC : 내림차순(생략 불가능)

사용방법
FROM 테이블명 ORDER BY 컬럼명 정렬방향;
FROM 테이블명 WHERE 조건식 ORDER BY 컬럼명 정렬방향;
FROM 테이블명 WHERE 조건식 ORDER BY 컬럼명 정렬방향, 컬럼명 정렬방향;

-------------------------------------------------------------------------------------

정규화
- 모델링을 잘 하면서 테이블을 만들었지만 불필요한 컬럼이라던지 불필요한 요소를
걸러내는 작업이다.
- 1차 ~ 5차까지 존재하지만 정규화를 진행할수록 테이블을 계속 분리하기 때문에
데이터를 가져오는 작업을 할 때 불편하다.
- 그렇기 때문에 보통 3차 정규화 작업까지만 진행한다.

정규화의 이점
- 불필요한 데이터 반복을 제거함으로써 저장공간을 최소화 할 수 있으며, 데이터의 
변경시 불일치성을 최소화 하고, 연산작업을 최소화 할 수 있다.

정규화 안된 테이블
↓
1차 정규화 (도메인 원자값이어야 한다)
↓(1차 정규화를 만족하며 부분함수 종속이 해소되어야 함)
2차 정규화 (관련있는 컬럼끼리 테이블을 분리한다.)
↓(2차 정규화를 만족하여 이행함수 종속이 해소되어야 함)
3차 정규화 (이행함수 종속을 쪼개서 따로 테이블로 만든다. 하나의 컬럼이 다른 컬럼을 대표할 수 없다.)
↓(3차를 만족하며 모든 컬럼이 후보키가 되도록 테이블을 분해하는 것)
BCNF차 정규화
↓
4차 정규화
↓
5차 정규화

함수적 종속성
- 하나의 테이블에서 한 컬럼의 값(X)가 다른 컬럼의 값(Y)을 결정하는 관계
- 정규화가 잘된 테이블일수록 결정자 X는 PK가 한개이고 종속자가 여러개인 구조를 가진다.

완전 함수 종속
- 종속자가 기본키에만 종속되며, 기본키가 여러 속성으로 구성되어 있을 경우 
- 기본키를 구성하는 모든 속성이 포함된 기본키의 부분집합에 종속된 경우

부분함수 종속 
- 기본키가 복합키일 경우 기본키를 구성하는 속성 중 일부에게 종속된 경우를 말한다.

이행함수종속
- 테이블에서 X,Y,Z라는 세개의 컬럼이 존재할 때 X->Y, Y->Z이란 종속관계가 있을 때,
X ->Z가 성립되는 것

이상현상(Anormally)
삽입이상 - 새 데이터를 삽입하기 위해 불필요한 데이터도 삽입해야 하는 문제
갱신이상 - 일부만 변경되어 데이터가 불일치하게 되는 현상
삭제이상 - 행을 삭제할 때 필요한 데이터까지 함께 삭제되는 현상 

정규화는 논리모델링을 할 때 실시한다.

SQL함수
- 사용자가 필요한 기능을 만드는 함수가 아닌, 오라클 자체적으로 제공하는 함수
- 이 상황에 맞는 적절한 함수를 사용하기 위해서는 어떤 기능을 하는 함수들이
존재하는지 정확하게 파악하고 있어야 한다.

내장함수의 종류
- 단일행 함수 : 1개의 행값이 함수에 적용되어 1개의 행을 반환
- 집계함수 : 1개 이상의 행의 값이 함수에 적용되어 1개의 값을 반환한다.


스키마에 대해 아는대로 쓰시오
데이터베이스의 제약조건에 대해 전반적인 명세를 기술한것

개념 - 전체적인 뷰
내부 - 데이터를 어디에 저장을 할 것인가
외부 - 사용자 입장에서 어떻게 사용할 것인가
